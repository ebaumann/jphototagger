package org.jphototagger.plugin.iviewsshow;

import org.openide.util.Lookup;

import org.jphototagger.api.preferences.Preferences;

/**
 * 
 *
 * @author  Elmar Baumann
 */
public class IrfanViewSlideshowSettingsPanel extends javax.swing.JPanel {

    private static final long serialVersionUID = 1L;

    public IrfanViewSlideshowSettingsPanel() {
        initComponents();
        postInitComponents();
    }

    private void postInitComponents() {
        Preferences prefs = Lookup.getDefault().lookup(Preferences.class);
        boolean isReloadOnLoop = prefs.getBoolean(IrfanViewSlideshowUserPreferencesKeys.KEY_RELOAD_ON_LOOP);

        checkBoxReloadOnLoop.setSelected(isReloadOnLoop);
    }

    private void setReloadOnLoop() {
        Preferences prefs = Lookup.getDefault().lookup(Preferences.class);

        prefs.setBoolean(IrfanViewSlideshowUserPreferencesKeys.KEY_RELOAD_ON_LOOP, checkBoxReloadOnLoop.isSelected());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        checkBoxReloadOnLoop = new javax.swing.JCheckBox();

        setName("Form"); // NOI18N

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/jphototagger/plugin/iviewsshow/Bundle"); // NOI18N
        checkBoxReloadOnLoop.setText(bundle.getString("IrfanViewSlideshowSettingsPanel.checkBoxReloadOnLoop.text")); // NOI18N
        checkBoxReloadOnLoop.setName("checkBoxReloadOnLoop"); // NOI18N
        checkBoxReloadOnLoop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxReloadOnLoopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(checkBoxReloadOnLoop)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(checkBoxReloadOnLoop)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void checkBoxReloadOnLoopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxReloadOnLoopActionPerformed
        setReloadOnLoop();
    }//GEN-LAST:event_checkBoxReloadOnLoopActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox checkBoxReloadOnLoop;
    // End of variables declaration//GEN-END:variables
}
