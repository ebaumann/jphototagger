package org.jphototagger.dtncreators.scripts.unix;

import java.io.File;
import java.util.ResourceBundle;
import org.jphototagger.dtncreators.FileChooser;
import org.jphototagger.dtncreators.Util;
import org.jphototagger.lib.componentutil.MnemonicUtil;
import org.jphototagger.lib.dialog.Dialog;

/**
 *
 *
 * @author Elmar Baumann
 */
public class ImageMagickDcrawThumbnailCreatorDialog extends Dialog {
    private static final long serialVersionUID = 1L;
    private File dcraw;
    private File convert;
    private File identify;
    private final FileChooser dcrawFileChooser = createDcrawFileChooser();
    private final FileChooser convertFileChooser = createConvertFileChooser();
    private final FileChooser identifyFileChooser = createIdentifyFileChooser();
    private boolean accepted;
    
    public ImageMagickDcrawThumbnailCreatorDialog() {
        super((java.awt.Frame) null, true);
        initComponents();
        postInitComponents();
    }
    
    private void postInitComponents() {
        MnemonicUtil.setMnemonics(this);
    }

    public boolean isAccepted() {
        return accepted;
    }

    public File getConvert() {
        return convert;
    }

    public File getDcraw() {
        return dcraw;
    }

    public File getIdentify() {
        return identify;
    }
    
    private void chooseDcraw() {
        File file = dcrawFileChooser.chooseFileFixedName();
        
        if (file != null) {
            dcraw = file;
        }
        
        setEnabledOkButton();
    }
    
    private void chooseConvert() {
        File file = convertFileChooser.chooseFileFixedName();
        
        if (file != null) {
            convert = file;
        }
        
        setEnabledOkButton();
    }
    
    private void chooseIdentify() {
        File file = identifyFileChooser.chooseFileFixedName();
        
        if (file != null) {
            identify = file;
        }
        
        setEnabledOkButton();
    }
    
    private void setEnabledOkButton() {
        buttonOk.setEnabled(dcraw != null && convert != null && identify != null);
    }

    private FileChooser createDcrawFileChooser() {
        ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/jphototagger/dtncreators/scripts/unix/Bundle");
        String filename = "dcraw";
        String fileDescription = bundle.getString("ImageMagickDcrawThumbnailCreatorDialog.Dcraw.FileChooser.Description" );
        String fileChooserTitle = bundle.getString("ImageMagickDcrawThumbnailCreatorDialog.Dcraw.FileChooser.Title");
        
        return createFileChooser(filename, fileDescription, fileChooserTitle);
    }

    private FileChooser createConvertFileChooser() {
        ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/jphototagger/dtncreators/scripts/unix/Bundle");
        String filename = "convert";
        String fileDescription = bundle.getString("ImageMagickDcrawThumbnailCreatorDialog.Convert.FileChooser.Description" );
        String fileChooserTitle = bundle.getString("ImageMagickDcrawThumbnailCreatorDialog.Convert.FileChooser.Title");
        
        return createFileChooser(filename, fileDescription, fileChooserTitle);
    }

    private FileChooser createIdentifyFileChooser() {
        ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/jphototagger/dtncreators/scripts/unix/Bundle");
        String filename = "identify";
        String fileDescription = bundle.getString("ImageMagickDcrawThumbnailCreatorDialog.Identify.FileChooser.Description" );
        String fileChooserTitle = bundle.getString("ImageMagickDcrawThumbnailCreatorDialog.Identify.FileChooser.Title");
        
        return createFileChooser(filename, fileDescription, fileChooserTitle);
    }
    
    private FileChooser createFileChooser(String filename, String fileDescription, String fileChooserTitle) {

        return new FileChooser.Builder(filename)
                .fileChooserTitle(fileChooserTitle)
                .fileDescription(fileDescription)
                .build();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        labelInfo = new org.jdesktop.swingx.JXLabel();
        buttonChooseDcraw = new javax.swing.JButton();
        buttonBrowseDcraw = new javax.swing.JButton();
        buttonChooseConvert = new javax.swing.JButton();
        buttonBrowseConvert = new javax.swing.JButton();
        buttonChooseIdentify = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        buttonOk = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/jphototagger/dtncreators/scripts/unix/Bundle"); // NOI18N
        labelInfo.setText(bundle.getString("ImageMagickDcrawThumbnailCreatorDialog.labelInfo.text")); // NOI18N

        buttonChooseDcraw.setText(bundle.getString("ImageMagickDcrawThumbnailCreatorDialog.buttonChooseDcraw.text")); // NOI18N
        buttonChooseDcraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonChooseDcrawActionPerformed(evt);
            }
        });

        buttonBrowseDcraw.setText(bundle.getString("ImageMagickDcrawThumbnailCreatorDialog.buttonBrowseDcraw.text")); // NOI18N
        buttonBrowseDcraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBrowseDcrawActionPerformed(evt);
            }
        });

        buttonChooseConvert.setText(bundle.getString("ImageMagickDcrawThumbnailCreatorDialog.buttonChooseConvert.text")); // NOI18N
        buttonChooseConvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonChooseConvertActionPerformed(evt);
            }
        });

        buttonBrowseConvert.setText(bundle.getString("ImageMagickDcrawThumbnailCreatorDialog.buttonBrowseConvert.text")); // NOI18N
        buttonBrowseConvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBrowseConvertActionPerformed(evt);
            }
        });

        buttonChooseIdentify.setText(bundle.getString("ImageMagickDcrawThumbnailCreatorDialog.buttonChooseIdentify.text")); // NOI18N
        buttonChooseIdentify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonChooseIdentifyActionPerformed(evt);
            }
        });

        buttonCancel.setText(bundle.getString("ImageMagickDcrawThumbnailCreatorDialog.buttonCancel.text")); // NOI18N
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        buttonOk.setText(bundle.getString("ImageMagickDcrawThumbnailCreatorDialog.buttonOk.text")); // NOI18N
        buttonOk.setEnabled(false);
        buttonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(buttonChooseIdentify)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(buttonChooseDcraw)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonBrowseDcraw))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(buttonChooseConvert)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonBrowseConvert))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(buttonCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonOk)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {buttonBrowseConvert, buttonBrowseDcraw, buttonChooseConvert, buttonChooseDcraw, buttonChooseIdentify});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonChooseDcraw)
                    .addComponent(buttonBrowseDcraw))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonChooseConvert)
                    .addComponent(buttonBrowseConvert))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonChooseIdentify)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonOk)
                    .addComponent(buttonCancel))
                .addGap(12, 12, 12))
        );

        pack();
    }//GEN-END:initComponents

    private void buttonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOkActionPerformed
        accepted = true;
        setVisible(false);
    }//GEN-LAST:event_buttonOkActionPerformed

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        setVisible(false);
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void buttonChooseDcrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonChooseDcrawActionPerformed
        chooseDcraw();
    }//GEN-LAST:event_buttonChooseDcrawActionPerformed

    private void buttonChooseConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonChooseConvertActionPerformed
        chooseConvert();
    }//GEN-LAST:event_buttonChooseConvertActionPerformed

    private void buttonBrowseDcrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBrowseDcrawActionPerformed
        Util.browse("http://www.cybercom.net/~dcoffin/dcraw/");
    }//GEN-LAST:event_buttonBrowseDcrawActionPerformed

    private void buttonBrowseConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBrowseConvertActionPerformed
        Util.browse("http://www.imagemagick.org/");
    }//GEN-LAST:event_buttonBrowseConvertActionPerformed

    private void buttonChooseIdentifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonChooseIdentifyActionPerformed
        chooseIdentify();
    }//GEN-LAST:event_buttonChooseIdentifyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                ImageMagickDcrawThumbnailCreatorDialog dialog = new ImageMagickDcrawThumbnailCreatorDialog();
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBrowseConvert;
    private javax.swing.JButton buttonBrowseDcraw;
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonChooseConvert;
    private javax.swing.JButton buttonChooseDcraw;
    private javax.swing.JButton buttonChooseIdentify;
    private javax.swing.JButton buttonOk;
    private org.jdesktop.swingx.JXLabel labelInfo;
    // End of variables declaration//GEN-END:variables
}
