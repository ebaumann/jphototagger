/*
 * JPhotoTagger tags and finds images fast
 * Copyright (C) 2009 by the developer team, resp. Elmar Baumann<eb@elmar-baumann.de>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */
package de.elmar_baumann.jpt.view.panels;

import de.elmar_baumann.jpt.UserSettings;
import de.elmar_baumann.jpt.database.metadata.Column;
import de.elmar_baumann.jpt.database.metadata.ColumnUtil;
import de.elmar_baumann.jpt.database.metadata.selections.FastSearchColumns;
import de.elmar_baumann.jpt.model.ListModelSelectedColumns;
import de.elmar_baumann.jpt.resource.Bundle;
import de.elmar_baumann.jpt.types.Persistence;
import de.elmar_baumann.lib.component.CheckList;
import de.elmar_baumann.lib.componentutil.MnemonicUtil;
import java.awt.Container;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.JScrollPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author  Elmar Baumann <eb@elmar-baumann.de>
 */
public final class SettingsFastSearchColumnsPanel extends javax.swing.JPanel
    implements ActionListener, Persistence {

    private static final long                     serialVersionUID = 8203085810742615278L;
    private final        CheckList                list             = new CheckList();
    private final        ListModelSelectedColumns model            = new ListModelSelectedColumns(FastSearchColumns.get());

    public SettingsFastSearchColumnsPanel() {
        initComponents();
        postInitComponents();
    }

    private void postInitComponents() {
        list.setModel(model);
        list.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        list.addActionListener(this);
        MnemonicUtil.setMnemonics((Container) this);
    }

    @Override
    public void readProperties() {
        list.setSelectedItemsWithText(
            ColumnUtil.getDescriptionsOfColumns(UserSettings.INSTANCE.getFastSearchColumns()), true);
        checkBoxDisplaySearchButton.setSelected(UserSettings.INSTANCE.isDisplaySearchButton());
    }

    @Override
    public void writeProperties() {
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        setFastSearchColumnsToUserSettings();
    }

    private void handleActionPerformedCheckBoxDisplaySearchButton() {
        UserSettings.INSTANCE.setDisplaySearchButton(checkBoxDisplaySearchButton.isSelected());
    }

    private void setFastSearchColumnsToUserSettings() {
        boolean selected = list.getSelectionCount() > 0;

        UserSettings.INSTANCE.setFastSearchColumns(selected ? ColumnUtil.getSelectedColumns(list) : new ArrayList<Column>());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelFastSearchColumns = new javax.swing.JLabel();
        scrollPaneFastSearchColumns = new JScrollPane(list);
        checkBoxDisplaySearchButton = new javax.swing.JCheckBox();

        labelFastSearchColumns.setLabelFor(scrollPaneFastSearchColumns);
        labelFastSearchColumns.setText(Bundle.getString("SettingsFastSearchColumnsPanel.labelFastSearchColumns.text")); // NOI18N

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("de/elmar_baumann/jpt/resource/properties/Bundle"); // NOI18N
        checkBoxDisplaySearchButton.setText(bundle.getString("SettingsFastSearchColumnsPanel.checkBoxDisplaySearchButton.text")); // NOI18N
        checkBoxDisplaySearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxDisplaySearchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkBoxDisplaySearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelFastSearchColumns)
                    .addComponent(scrollPaneFastSearchColumns, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelFastSearchColumns)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPaneFastSearchColumns, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkBoxDisplaySearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void checkBoxDisplaySearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxDisplaySearchButtonActionPerformed
        handleActionPerformedCheckBoxDisplaySearchButton();
}//GEN-LAST:event_checkBoxDisplaySearchButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox checkBoxDisplaySearchButton;
    private javax.swing.JLabel labelFastSearchColumns;
    private javax.swing.JScrollPane scrollPaneFastSearchColumns;
    // End of variables declaration//GEN-END:variables
}
