/*
 * JPhotoTagger tags and finds images fast
 * Copyright (C) 2009 by the developer team, resp. Elmar Baumann<eb@elmar-baumann.de>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */
package de.elmar_baumann.jpt.view.panels;

import de.elmar_baumann.jpt.UserSettings;
import de.elmar_baumann.jpt.database.metadata.ColumnUtil;
import de.elmar_baumann.jpt.database.metadata.selections.FastSearchColumns;
import de.elmar_baumann.jpt.event.listener.impl.ListenerProvider;
import de.elmar_baumann.jpt.event.UserSettingsChangeEvent;
import de.elmar_baumann.jpt.model.ListModelSelectedColumns;
import de.elmar_baumann.jpt.resource.Bundle;
import de.elmar_baumann.jpt.types.Persistence;
import de.elmar_baumann.lib.component.CheckList;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JScrollPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author  Elmar Baumann <eb@elmar-baumann.de>
 */
public final class SettingsFastSearchColumnsPanel extends javax.swing.JPanel
    implements ActionListener, Persistence {

    private final CheckList list = new CheckList();
    private final ListModelSelectedColumns model = new ListModelSelectedColumns(
        FastSearchColumns.get());
    private final ListenerProvider listenerProvider = ListenerProvider.INSTANCE;

    /** Creates new form SettingsFastSearchColumnsPanel */
    public SettingsFastSearchColumnsPanel() {
        initComponents();
        postInitComponents();
    }

    private void postInitComponents() {
        list.setModel(model);
        list.setSelectionMode(
            ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        list.addActionListener(this);
    }

    @Override
    public void readProperties() {
        list.setSelectedItemsWithText(
            ColumnUtil.getDescriptionsOfColumns(
            UserSettings.INSTANCE.getFastSearchColumns()), true);
    }

    @Override
    public void writeProperties() {
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        listenerProvider.notifyUserSettingsChangeListener(getUserSettingsChangeEvent());
    }

    private UserSettingsChangeEvent getUserSettingsChangeEvent() {
        boolean selected = list.getSelectionCount() > 0;
        UserSettingsChangeEvent evt = new UserSettingsChangeEvent(selected
            ? UserSettingsChangeEvent.Type.FAST_SEARCH_COLUMNS
            : UserSettingsChangeEvent.Type.NO_FAST_SEARCH_COLUMNS, this);
        evt.setFastSearchColumns(ColumnUtil.getSelectedColumns(list));
        evt.setNoFastSearchColumns(!selected);
        return evt;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelFastSearchColumns = new javax.swing.JLabel();
        scrollPaneFastSearchColumns = new JScrollPane(list);

        labelFastSearchColumns.setText(Bundle.getString("SettingsFastSearchColumnsPanel.labelFastSearchColumns.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelFastSearchColumns)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(scrollPaneFastSearchColumns, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelFastSearchColumns)
                .addContainerGap(106, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(38, 38, 38)
                    .addComponent(scrollPaneFastSearchColumns, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                    .addContainerGap()))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel labelFastSearchColumns;
    private javax.swing.JScrollPane scrollPaneFastSearchColumns;
    // End of variables declaration//GEN-END:variables
}
