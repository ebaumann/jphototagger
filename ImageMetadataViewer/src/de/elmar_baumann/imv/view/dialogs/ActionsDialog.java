package de.elmar_baumann.imv.view.dialogs;

import de.elmar_baumann.imv.AppSettings;
import de.elmar_baumann.imv.controller.actions.ControllerActionExecutor;
import de.elmar_baumann.imv.data.Program;
import de.elmar_baumann.imv.event.ProgramActionEvent;
import de.elmar_baumann.imv.event.ProgramActionListener;
import de.elmar_baumann.imv.resource.Bundle;
import de.elmar_baumann.lib.dialog.Dialog;
import de.elmar_baumann.lib.persistence.PersistentAppSizes;
import javax.swing.JProgressBar;

/**
 * Non modal dialog for actions: {@link de.elmar_baumann.imv.data.Program}
 * where {@link de.elmar_baumann.imv.data.Program#isAction()} is true.
 * 
 * @author  Elmar Baumann <eb@elmar-baumann.de>
 */
public class ActionsDialog extends Dialog implements ProgramActionListener {

    private static ActionsDialog instance = new ActionsDialog();

    private ActionsDialog() {
        super((java.awt.Frame) null, false);
        initComponents();
        postInitComponents();
    }

    public JProgressBar getProgressBar(ControllerActionExecutor executor) {
        return panelActions.getProgressBar(executor);
    }

    private void postInitComponents() {
        setIconImages(AppSettings.getAppIcons());
        panelActions.addActionListener(this);
        registerKeyStrokes();
    }

    public static ActionsDialog getInstance() {
        return instance;
    }

    @Override
    public void setVisible(boolean visible) {
        if (visible) {
            panelActions.setButtonsEnabled();
            PersistentAppSizes.getSizeAndLocation(this);
        } else {
            PersistentAppSizes.setSizeAndLocation(this);
        }
        super.setVisible(visible);
    }

    public void addActionListener(ProgramActionListener l) {
        panelActions.addActionListener(l);
    }

    @Override
    public void actionPerformed(ProgramActionEvent evt) {
        ProgramActionEvent.Type type = evt.getType();
        if ((type.equals(ProgramActionEvent.Type.ActionCreated) ||
            type.equals(ProgramActionEvent.Type.ActionUpdated)) && isVisible()) {
            toFront();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelActions = new de.elmar_baumann.imv.view.panels.ActionsPanel();

        setTitle(Bundle.getString("ActionsDialog.title")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelActions, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelActions, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                ActionsDialog dialog = new ActionsDialog();
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private de.elmar_baumann.imv.view.panels.ActionsPanel panelActions;
    // End of variables declaration//GEN-END:variables
}
