package de.elmar_baumann.imv.view.panels;

import de.elmar_baumann.imv.UserSettings;
import de.elmar_baumann.imv.event.ListenerProvider;
import de.elmar_baumann.imv.event.UserSettingsChangeEvent;
import de.elmar_baumann.imv.model.ComboBoxModelThreadPriority;
import de.elmar_baumann.imv.resource.Bundle;
import de.elmar_baumann.imv.types.Persistence;

/**
 *
 * @author  Elmar Baumann <eb@elmar-baumann.de>
 * @version 2008/11/02
 */
public final class SettingsPerformancePanel extends javax.swing.JPanel
    implements Persistence {

    private final ListenerProvider listenerProvider = ListenerProvider.INSTANCE;

    /** Creates new form SettingsPerformancePanel */
    public SettingsPerformancePanel() {
        initComponents();
    }

    private void handleActionPerformedCheckBoxIsAutocompleteDisabled() {
        UserSettingsChangeEvent evt = new UserSettingsChangeEvent(
            UserSettingsChangeEvent.Type.IS_USE_AUTOCOMPLETE, this);
        evt.setAutocomplete(!checkBoxIsAutocompleteDisabled.isSelected());
        notifyChangeListener(evt);
    }

    private void handleActionComboBoxThreadPriorityAction() {
        UserSettingsChangeEvent evt = new UserSettingsChangeEvent(
            UserSettingsChangeEvent.Type.THREAD_PRIORITY, this);
        evt.setThreadPriority(getThreadPriority());
        notifyChangeListener(evt);
    }

    private int getThreadPriority() {
        return ((ComboBoxModelThreadPriority) comboBoxThreadPriority.getModel()).getSelectedPriority();
    }

    private synchronized void notifyChangeListener(UserSettingsChangeEvent evt) {
        listenerProvider.notifyUserSettingsChangeListener(evt);
    }

    @Override
    public void readProperties() {
        UserSettings settings = UserSettings.INSTANCE;
        ComboBoxModelThreadPriority modelThreadPriority =
            (ComboBoxModelThreadPriority) comboBoxThreadPriority.getModel();
        modelThreadPriority.setSelectedItem(modelThreadPriority.getItemOfPriority(
            settings.getThreadPriority()));

        checkBoxIsAutocompleteDisabled.setSelected(!settings.isUseAutocomplete());
    }

    @Override
    public void writeProperties() {
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelAccelerateStart = new javax.swing.JPanel();
        checkBoxIsAutocompleteDisabled = new javax.swing.JCheckBox();
        labelsAutocompleteDisabled = new javax.swing.JLabel();
        panelThreadPriority = new javax.swing.JPanel();
        labelThreadPriority = new javax.swing.JLabel();
        comboBoxThreadPriority = new javax.swing.JComboBox();
        labelInfoThreadPriority = new javax.swing.JLabel();

        panelAccelerateStart.setBorder(javax.swing.BorderFactory.createTitledBorder(null, Bundle.getString("SettingsPerformancePanel.panelAccelerateStart.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11))); // NOI18N

        checkBoxIsAutocompleteDisabled.setFont(new java.awt.Font("Dialog", 0, 12));
        checkBoxIsAutocompleteDisabled.setText(Bundle.getString("SettingsPerformancePanel.checkBoxIsAutocompleteDisabled.text")); // NOI18N
        checkBoxIsAutocompleteDisabled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxIsAutocompleteDisabledActionPerformed(evt);
            }
        });

        labelsAutocompleteDisabled.setFont(new java.awt.Font("Dialog", 0, 12));
        labelsAutocompleteDisabled.setForeground(new java.awt.Color(255, 0, 0));
        labelsAutocompleteDisabled.setText(Bundle.getString("SettingsPerformancePanel.labelsAutocompleteDisabled.text")); // NOI18N

        javax.swing.GroupLayout panelAccelerateStartLayout = new javax.swing.GroupLayout(panelAccelerateStart);
        panelAccelerateStart.setLayout(panelAccelerateStartLayout);
        panelAccelerateStartLayout.setHorizontalGroup(
            panelAccelerateStartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAccelerateStartLayout.createSequentialGroup()
                .addGroup(panelAccelerateStartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkBoxIsAutocompleteDisabled)
                    .addGroup(panelAccelerateStartLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelsAutocompleteDisabled)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        panelAccelerateStartLayout.setVerticalGroup(
            panelAccelerateStartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAccelerateStartLayout.createSequentialGroup()
                .addComponent(checkBoxIsAutocompleteDisabled)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelsAutocompleteDisabled)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelThreadPriority.setBorder(javax.swing.BorderFactory.createTitledBorder(null, Bundle.getString("SettingsPerformancePanel.panelThreadPriority.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11))); // NOI18N

        labelThreadPriority.setFont(new java.awt.Font("Dialog", 0, 12));
        labelThreadPriority.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelThreadPriority.setText(Bundle.getString("SettingsPerformancePanel.labelThreadPriority.text")); // NOI18N

        comboBoxThreadPriority.setFont(new java.awt.Font("Dialog", 0, 12));
        comboBoxThreadPriority.setModel(new de.elmar_baumann.imv.model.ComboBoxModelThreadPriority());
        comboBoxThreadPriority.setEditor(null);
        comboBoxThreadPriority.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxThreadPriorityActionPerformed(evt);
            }
        });

        labelInfoThreadPriority.setFont(new java.awt.Font("Dialog", 0, 12));
        labelInfoThreadPriority.setForeground(new java.awt.Color(255, 0, 0));
        labelInfoThreadPriority.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelInfoThreadPriority.setText(Bundle.getString("SettingsPerformancePanel.labelInfoThreadPriority.text")); // NOI18N

        javax.swing.GroupLayout panelThreadPriorityLayout = new javax.swing.GroupLayout(panelThreadPriority);
        panelThreadPriority.setLayout(panelThreadPriorityLayout);
        panelThreadPriorityLayout.setHorizontalGroup(
            panelThreadPriorityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelThreadPriorityLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelThreadPriorityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelInfoThreadPriority)
                    .addGroup(panelThreadPriorityLayout.createSequentialGroup()
                        .addComponent(labelThreadPriority)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxThreadPriority, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        panelThreadPriorityLayout.setVerticalGroup(
            panelThreadPriorityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelThreadPriorityLayout.createSequentialGroup()
                .addGroup(panelThreadPriorityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelThreadPriority, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxThreadPriority, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelInfoThreadPriority)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelThreadPriority, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelAccelerateStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelThreadPriority, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelAccelerateStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

private void checkBoxIsAutocompleteDisabledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxIsAutocompleteDisabledActionPerformed
    handleActionPerformedCheckBoxIsAutocompleteDisabled();
}//GEN-LAST:event_checkBoxIsAutocompleteDisabledActionPerformed

private void comboBoxThreadPriorityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxThreadPriorityActionPerformed
    handleActionComboBoxThreadPriorityAction();
}//GEN-LAST:event_comboBoxThreadPriorityActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox checkBoxIsAutocompleteDisabled;
    private javax.swing.JComboBox comboBoxThreadPriority;
    private javax.swing.JLabel labelInfoThreadPriority;
    private javax.swing.JLabel labelThreadPriority;
    private javax.swing.JLabel labelsAutocompleteDisabled;
    private javax.swing.JPanel panelAccelerateStart;
    private javax.swing.JPanel panelThreadPriority;
    // End of variables declaration//GEN-END:variables
}
