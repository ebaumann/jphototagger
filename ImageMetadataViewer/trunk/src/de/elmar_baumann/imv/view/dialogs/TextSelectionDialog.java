package de.elmar_baumann.imv.view.dialogs;

import de.elmar_baumann.imv.UserSettings;
import de.elmar_baumann.imv.app.AppIcons;
import de.elmar_baumann.imv.resource.Bundle;
import de.elmar_baumann.imv.view.panels.TextSelectionPanel;
import de.elmar_baumann.lib.componentutil.ComponentUtil;
import de.elmar_baumann.lib.dialog.Dialog;

/**
 * Dialog that holds a {@link TextSelectionPanel}.
 *
 * @author Elmar Baumann <eb@elmar-baumann.de>
 */
public class TextSelectionDialog extends Dialog {

    private static final int COUNT_TEXT_ELEMENTS = 9;
    public static final TextSelectionDialog INSTANCE = new TextSelectionDialog();

    private TextSelectionDialog() {
        super((java.awt.Frame) null, false);
        initComponents();
        postInitComponents();
        setPreferredSize(getPreferredSize());
    }

    private void postInitComponents() {
        setIconImages(AppIcons.getAppIcons());
        registerKeyStrokes();
    }

    public TextSelectionPanel getPanel() {
        return panelTextSelection;
    }

    @Override
    public void setVisible(boolean visible) {
        if (visible) {
            if (isVisible()) {
                toFront();
            } else {
                UserSettings.INSTANCE.getSettings().getSizeAndLocation(this);
                ComponentUtil.forceRepaint(panelTextSelection);
                super.setVisible(true);
            }
        } else {
            panelTextSelection.writeProperties();
            UserSettings.INSTANCE.getSettings().setSizeAndLocation(this);
            super.setVisible(false);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panel = new javax.swing.JPanel();
        labeInfo = new javax.swing.JLabel();
        panelTextSelection = new TextSelectionPanel(COUNT_TEXT_ELEMENTS);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle(Bundle.getString("TextSelectionDialog.title")); // NOI18N
        setAlwaysOnTop(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        panel.setLayout(new java.awt.GridBagLayout());

        labeInfo.setText(Bundle.getString("TextSelectionDialog.labeInfo.text")); // NOI18N
        labeInfo.setPreferredSize(new java.awt.Dimension(300, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 5);
        panel.add(labeInfo, gridBagConstraints);

        panelTextSelection.setPreferredSize(new java.awt.Dimension(300, 29));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.9;
        panel.add(panelTextSelection, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 376, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        setVisible(false);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                TextSelectionDialog dialog = new TextSelectionDialog();
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel labeInfo;
    private javax.swing.JPanel panel;
    private de.elmar_baumann.imv.view.panels.TextSelectionPanel panelTextSelection;
    // End of variables declaration//GEN-END:variables
}
