/*
 * JPhotoTagger tags and finds images fast
 * Copyright (C) 2009 by the developer team, resp. Elmar Baumann<eb@elmar-baumann.de>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */
package de.elmar_baumann.imv.view.dialogs;

import de.elmar_baumann.imv.UserSettings;
import de.elmar_baumann.imv.app.AppLookAndFeel;
import de.elmar_baumann.imv.controller.actions.ControllerActionExecutor;
import de.elmar_baumann.imv.data.Program;
import de.elmar_baumann.imv.event.ProgramEvent;
import de.elmar_baumann.imv.event.listener.ProgramActionListener;
import de.elmar_baumann.imv.resource.Bundle;
import de.elmar_baumann.lib.dialog.Dialog;
import javax.swing.JProgressBar;

/**
 * Non modal dialog for actions: {@link de.elmar_baumann.imv.data.Program}
 * where {@link de.elmar_baumann.imv.data.Program#isAction()} is true.
 * 
 * @author  Elmar Baumann <eb@elmar-baumann.de>
 */
public final class ActionsDialog extends Dialog implements ProgramActionListener {

    public static final ActionsDialog INSTANCE = new ActionsDialog();

    private ActionsDialog() {
        super((java.awt.Frame) null, false);
        initComponents();
        postInitComponents();
    }

    public JProgressBar getProgressBar(ControllerActionExecutor executor) {
        return panelActions.getProgressBar(executor);
    }

    private void postInitComponents() {
        setIconImages(AppLookAndFeel.getAppIcons());
        panelActions.addActionListener(this);
        registerKeyStrokes();
    }

    @Override
    public void setVisible(boolean visible) {
        if (visible) {
            panelActions.setButtonsEnabled();
            readProperties();
        } else {
            writeProperties();
        }
        super.setVisible(visible);
    }

    private void readProperties() {
        UserSettings.INSTANCE.getSettings().getSizeAndLocation(this);
    }

    private void writeProperties() {
        UserSettings.INSTANCE.getSettings().setSizeAndLocation(this);
        UserSettings.INSTANCE.writeToFile();
    }

    public synchronized void addActionListener(ProgramActionListener l) {
        panelActions.addActionListener(l);
    }

    @Override
    public void actionPerformed(ProgramEvent evt) {
        ProgramEvent.Type type = evt.getType();
        if ((type.equals(ProgramEvent.Type.PROGRAM_CREATED) ||
            type.equals(ProgramEvent.Type.PROGRAM_UPDATED)) && isVisible()) {
            toFront();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelActions = new de.elmar_baumann.imv.view.panels.ActionsPanel();

        setTitle(Bundle.getString("ActionsDialog.title")); // NOI18N
        setAlwaysOnTop(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelActions, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelActions, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                ActionsDialog dialog = new ActionsDialog();
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private de.elmar_baumann.imv.view.panels.ActionsPanel panelActions;
    // End of variables declaration//GEN-END:variables
}
