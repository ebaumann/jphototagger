<?xml version="1.0" encoding="UTF-8"?>
<project name="JPhotoTagger" default="default" basedir=".">
    <description>Helper scripts for developers</description>
    <property environment="env"/>
    <property name="repo.root" value="../.."/>
    <property name="translation.root" value="${repo.root}/OmegaT"/>
    <property file="${env.PROJECTDIR}/JPhotoTagger/Support/conf/scripts.properties"/><!-- Template see in ../conf -->
    <taskdef name="gcupload" classname="net.bluecow.googlecode.ant.GoogleCodeUploadTask" classpath="${repo.root}/DeveloperSupport/script/ant-googlecode.jar"/>
    <target name="dist_0_all_no_pdf_manual">
        <antcall target="dist_1_set_version_info" />
        <antcall target="dist_3_create_zip" />
        <antcall target="dist_4_upload" />
    </target>
    <target name="dist_0_all_pdf_manual">
        <antcall target="dist_1_set_version_info" />
        <antcall target="dist_2_create_pdf_manual" />
        <antcall target="dist_3_create_zip" />
        <antcall target="dist_4_upload" />
    </target>
    <target name="dist_1_set_version_info" description="Set Version Info to Dist">
        <exec executable="bash">
            <arg value="dist_set_version_info.sh" />
        </exec>
    </target>
    <target name="dist_2_create_pdf_manual" description="Creating PDF manual">
        <exec executable="bash">
            <arg value="create_html_index_manual.sh" />
            <arg value="de"/>
            <arg value="Handbuch des Programms &quot;JPhotoTagger&quot;"/>
        </exec>
        <exec executable="bash">
            <arg value="create_pdf_manual.sh" />
            <arg value="de" />
            <arg value="Handbuch des Programms &quot;JPhotoTagger&quot;"/>
        </exec>
    </target>
    <target name="dist_3_create_zip" description="Create ZIP distribution">
        <exec executable="bash">
            <arg value="dist_create_zip.sh" />
        </exec>
    </target>
    <target name="dist_4_upload" description="Uploading Distribution to Google Code">
        <!--${googlecode.username}, ${googlecode.password} and ${jptversion}
        will be read from scripts.properties within this directory
        -->
        <gcupload
            projectname="jphototagger"
            username="${googlecode.username}"
            password="${googlecode.password}"
            filename="${env.PROJECTDIR}/JPhotoTagger/main-repository/dist_files/upload/JPhotoTagger.zip"
            targetfilename="JPhotoTagger-${jptversion}.zip"
            summary="JPhotoTagger Version ${jptversion} - System independent ZIP archive"
            verbose="true"
            labels="photomanager, tagging, xmp, java"
        />
        <gcupload
            projectname="jphototagger"
            username="${googlecode.username}"
            password="${googlecode.password}"
            filename="${env.PROJECTDIR}/JPhotoTagger/main-repository/dist_files/upload/JPhotoTagger-setup.exe"
            targetfilename="JPhotoTagger-setup-${jptversion}.exe"
            summary="JPhotoTagger Version ${jptversion} - Windows Installer"
            verbose="true"
            labels="photomanager, tagging, xmp, java"
        />
        <exec executable="${env.HOME}/website/bin/update.sh"/>
    </target>
    <target name="check_bundles_find_missing_strings" description="Finding missing Bundle strings">
        <exec executable="bash">
            <arg value="find_missing_bundle_strings.sh"/>
        </exec>
    </target>
    <target name="test_switch_settingsdir_pristine" description="Switching to pristine settings">
        <exec executable="bash">
            <arg value="switch_settingsdir.sh"/>
            <arg value="-p"/>
        </exec>
    </target>
    <target name="test_switch_settingsdir_test" description="Switching to test settings">
        <exec executable="bash">
            <arg value="switch_settingsdir.sh"/>
            <arg value="-t"/>
        </exec>
    </target>
    <target name="test_switch_settingsdir_work" description="Switching to working settings">
        <exec executable="bash">
            <arg value="switch_settingsdir.sh"/>
            <arg value="-w"/>
        </exec>
    </target>
    <target name="test_copy_images" description="Copying test images">
        <exec executable="bash">
            <arg value="copy_test_images.sh"/>
        </exec>
    </target>
    <target name="translate_create_omegat_sources">
        <echo message="Creating source files for OmegaT translation"/>
        <antcall target="_translate_copy_omegat_sources_from_en">
            <param name="target.locale" value="pt_BR"/>
        </antcall>
    </target>
    <target name="_translate_copy_omegat_sources_from_localized">
        <echo message="Copying files to translate from ${src.locale} to ${target.locale}" />
        <property name="translation.srcdir" value="${translation.root}/${src.locale}-${target.locale}/source" />
        <delete dir="${translation.srcdir}" failonerror="false"/>
        <mkdir dir="${translation.srcdir}"/>
        <copy todir="${translation.srcdir}">
            <fileset dir="${repo.root}">
                <include name="Localization/src/**/*${src.locale}.properties"/>
            </fileset>
            <globmapper from="*_${src.locale}.properties" to="*.properties"/>
        </copy>
    </target>
    <target name="_translate_copy_omegat_sources_from_de">
        <echo message="Copying files to translate from de to ${target.locale}" />
        <property name="locale" value="de-${target.locale}"/>
        <property name="translation.srcdir" value="${translation.root}/${locale}/source" />
        <delete dir="${translation.srcdir}" failonerror="false"/>
        <mkdir dir="${translation.srcdir}"/>
        <copy todir="${translation.srcdir}">
            <fileset dir="${repo.root}">
                <include name="**/*.properties"/>
                <exclude name="**/*_en.properties"/>
                <exclude name="**/build/**"/>
                <exclude name="**/nbproject/**"/>
                <exclude name="DeveloperSupport/**"/>
                <exclude name="dist_files/**"/>
                <exclude name="Libraries/**"/>
                <exclude name="Localization/**"/>
                <exclude name="OmegaT/**"/>
                <exclude name="Website/**"/>
            </fileset>
        </copy>
    </target>
    <target name="_translate_copy_omegat_sources_from_en">
        <echo message="Copying files to translate from en to ${target.locale}" />
        <property name="locale" value="en-${target.locale}"/>
        <property name="translation.srcdir" value="${translation.root}/${locale}/source" />
        <delete dir="${translation.srcdir}" failonerror="false"/>
        <mkdir dir="${translation.srcdir}"/>
        <copy todir="${translation.srcdir}">
            <fileset dir="${repo.root}">
                <include name="**/*_en.properties"/>
                <exclude name="**/build/**"/>
                <exclude name="**/nbproject/**"/>
                <exclude name="DeveloperSupport/**"/>
                <exclude name="dist_files/**"/>
                <exclude name="Libraries/**"/>
                <exclude name="Localization/**"/>
                <exclude name="OmegaT/**"/>
                <exclude name="Website/**"/>
            </fileset>
            <globmapper from="*_en.properties" to="*.properties"/>
        </copy>
        <antcall target="_translate_create_zip">
            <param name="locale" value="${locale}"/>
        </antcall>
    </target>
    <target name="_translate_create_zip">
        <echo message="Creating ZIP translation file for ${locale}"/>
        <delete failonerror="false">
            <fileset dir="${translation.root}/${locale}/target" includes="**" />
        </delete>
        <zip destfile="${translation.root}/${locale}.zip"
             basedir="${translation.root}"
             includes="${locale}/**"
             whenempty="create"
        />
    </target>
    <target name="translate_copy_omegat_translations">
        <property name="localization.srcdir" value="${repo.root}/Localization/src" />
        <echo message="Copy OmegaT translations to Localization project in ${localization.srcdir}"/>
        <copy todir="${localization.srcdir}">
            <fileset dir="${translation.root}">
                <include name="**/target/**"/>
            </fileset>
            <regexpmapper from="^.*/target/.*/src/(.*)" to="\1" handledirsep="yes"/>
        </copy>
    </target>
</project>
